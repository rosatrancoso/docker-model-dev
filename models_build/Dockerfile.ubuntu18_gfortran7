FROM ubuntu:18.04
LABEL maintainer="rosatrancoso@gmail.com"

#ARG DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install -y \
    make wget \
    g++ gfortran

RUN apt-get install -y \
    # ZLIB library
    zlib1g-dev \
    # SZIP library
    libsz2 \
    # HDF5 all of it
    libhdf5-dev \
    libnetcdff-dev

RUN h5fc -show &&\
    nc-config --all

# RUN gfortran test_hdf5.f90 -o test_hdf5.exe \
#     -I/usr/include/hdf5/serial/ \
#     -L/usr/lib/x86_64-linux-gnu/ -L/usr/lib/x86_64-linux-gnu/hdf5/serial/ \
#     -lhdf5hl_fortran -lhdf5_fortran -lhdf5_hl -lhdf5 -lpthread -lm -lz -lsz &&\
#     ./test_hdf5.exe

# RUN wget https://support.hdfgroup.org/ftp/HDF5/examples/examples-by-api/hdf5-examples/1_8/FORTRAN/H5D/h5ex_d_rdwr.f90 &&\
#     gfortran h5ex_d_rdwr.f90 -o h5ex_d_rdwr.exe \
#     -I/usr/include/hdf5/serial/ \
#     -L/usr/lib/x86_64-linux-gnu/ -L/usr/lib/x86_64-linux-gnu/hdf5/serial/ \
#     -lhdf5hl_fortran -lhdf5_fortran -lhdf5_hl -lhdf5 -lpthread -lm -lz -lsz &&\
#     ./h5ex_d_rdwr.exe


# RUN gfortran test_libs.f90 -o test_libs.exe \
#     -I/usr/include/ -I/usr/include/hdf5/serial/ \
#     -L/usr/lib/x86_64-linux-gnu/ -L/usr/lib/x86_64-linux-gnu/hdf5/serial/ \
#     -lnetcdff -lhdf5hl_fortran -lhdf5_fortran -lhdf5_hl -lhdf5 -lpthread -lm -lz -lsz &&\
#     ./test_libs.exe





# HDF5 Libraries
# Following are the libraries included with HDF5. Whether you are using the Unix compile scripts or Makefiles, or are compiling on Windows, these libraries are or may need to be specified. The order they are specified is important:

#     libhdf5_hl_cpp.a    - HDF5 High Level C++ APIs
#     libhdf5_cpp.a       - HDF5 C++ Library
#     libhdf5hl_fortran.a - HDF5 High Level Fortran APIs
#     libhdf5_fortran.a   - HDF5 Fortran Library
#     libhdf5_hl.a        - HDF5 High Level C APIs
#     libhdf5.a           - HDF5 C Library
# The -show option for h5cc, hc++ and h5fc will display the libraries in the correct order.

# External Libraries:

#     libsz.a             - SZIP Compression Library
#     libz.a              - ZLIB or DEFLATE Compression Library
#     (any other system libraries, such as -lrt -lm ...)



# RUN echo "Installing hdf5 1.8..." &&\
#     cd /tmp &&\
#     wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.17/src/hdf5-1.8.17.tar.gz &&\
#     tar zxvf hdf5-1.8.17.tar.gz &&\
#     cd hdf5-1.8.17 &&\
#     ./configure --prefix=/usr/local --enable-fortran --enable-cxx --enable-hl &&\
#     make &&\
#     make install


# gfortran test_hdf5.f90 -o test_hdf5.exe \
# -I/usr/local/include \
# -L/usr/local/lib \
# -lhdf5_hl -lhdf5 -lpthread -lm -lz -lhdf5_fortran




# RUN nc-config --all

# ADD test_libs.f90 /tmp/test/
# RUN cd /tmp/test/ &&\
#     gfortran -ffree-form -fPIC \
#         test_libs.f90 -o test_libs.exe \
#         -I/usr/include -I/usr/include/hdf5/serial \
#         -L/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu/hdf5/serial \
#         -lnetcdf -lnetcdff -lhdf5_hl -lhdf5 -lpthread -lm -lz -lhdf5_fortran &&\
#     ./test_libs.exe


# # cd /source/Mohid/Solutions/mohid-in-linux/src/Mohid_Base_1
# # make build/ModuleGlobalData.o

# gfortran -c src/ModuleHDF5.F90 -g -w -fPIC -D_USE_NIX -fdefault-integer-4 \
# -I/usr/include -I/usr/include/hdf5/serial -L/usr/lib/x86_64-linux-gnu/hdf5/serial  \
# -lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran -lhdf5 \
# -L/usr/lib/x86_64-linux-gnu -lnetcdf -lnetcdff  \
# -o build/ModuleHDF5.o \
# -Jinclude

# Error: Type mismatch in argument 'hdf5id' at (1); passed INTEGER(8) to INTEGER(4)
# src/ModuleHDF5.F90:7846:71:




#     cmake make autoconf automake \
#     gcc g++ gfortran \
#     zlib1g-dev libhdf5-dev libnetcdf-dev \
#     libhdf5-fortran-102 libnetcdff-dev \
#     proj-bin libproj-dev \
#     vim tree git curl \
# &&  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# RUN echo "------ Installing fortran-proj ------" &&\
#     cd /tmp &&\
#     git clone https://gitlab.com/likeno/fortran-proj.git &&\
#     cd fortran-proj &&\
#     mkdir build && cd build &&\
#     cmake .. &&\
#     make &&\
#     make install 

# -- Installing: /usr/local/lib/libfproj.so
# -- Installing: /usr/local/include/fproj.mod

# RUN echo "------ Installing Base1 ------" &&\
#     cd $SOURCE_DIR/Mohid/Solutions/mohid-in-linux/src/Mohid_Base_1

# WORKDIR /source/Mohid/Solutions/mohid-in-linux/src/Mohid_Base_1


# # ######################
# # ### Install wgrib2 ###
# # ######################

# # RUN echo "------ Installing wgrib2 ------" \
# # &&  mkdir /tmp/wgrib2 \
# # &&  cd /tmp/wgrib2 \
# # &&  curl ftp://ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz -o wgrib2.tgz \
# # &&  tar -zxf wgrib2.tgz \
# # &&  cd grib2 \
# # &&  export CC=gcc && export FC=gfortran && make \
# # &&  cp wgrib2/wgrib2 /usr/local/bin \
# # &&  cd /tmp && rm -r /tmp/wgrib2


# # #####################################
# # ### Install ecgribs without conda ###
# # #####################################

# # # install wgrib first
# # RUN echo "------ Installing wgrib ------" \
# # &&  mkdir /tmp/wgrib \
# # &&  cd /tmp/wgrib \
# # &&  curl ftp://ftp.cpc.ncep.noaa.gov/wd51we/wgrib/wgrib.tar -o wgrib.tar \
# # &&  tar -xf wgrib.tar \
# # &&  make \
# # &&  cp wgrib /usr/local/bin \
# # &&  cd /tmp && rm -r /tmp/wgrib

# # ARG GIT_TOKEN=f65e3c9cb3e5b0afda1669ef8ca4f15858a0d816
# # ARG GIT_LFS_SKIP_SMUDGE=1

# # RUN echo '---- Install ecgribs ----' \
# # &&  cd $SOURCE_DIR \
# # &&  git clone https://$GIT_TOKEN@github.com/MetServiceDev/ecgribs.git \
# # &&  cd ecgribs \
# # &&  git fetch --tags \
# # &&  latestTag=$(git describe --tags `git rev-list --tags --max-count=1`) \
# # &&  git checkout -b $latestTag $latestTag \
# # &&  pip3 install -r requirements.txt \
# # &&  pip3 install -e .


# # # ###############################
# # # ### Install hysplit_wrapper ###
# # # ###############################

# # ADD . $SOURCE_DIR/hysplit_wrapper
# # RUN echo '---- Install hysplit_wrapper ----' \
# # &&  cd $SOURCE_DIR/hysplit_wrapper \
# # &&  pip3 install -r requirements.txt \
# # &&  pip3 install cartopy \
# # &&  pip3 install -e .
# # # there's an issue when installing cartopy=0.18.0 and numpy at the same time
# # # https://github.com/SciTools/cartopy/issues/1552


# # # ###########################
# # # ### Install source code ###
# # # ###########################

# # ADD hysplit.v5.0.1_gfortran_rmass16.tar.gz $SOURCE_DIR/gfortran_rmass16
# # ADD hysplit.v5.0.1_gfortran.tar.gz $SOURCE_DIR/gfortran
# # ADD hysplit.v5.0.1_intel.tar.gz $SOURCE_DIR/intel

# # ENV \
# #     # need this so that $UID has write permissions
# #     MPLCONFIGDIR='/tmp/matplotlib' \
# #     CARTOPY_DATA_DIR='/tmp/cartopy' \
# #     # this doesn't have to be here because
# #     # it's also defined in hysplit_wrapper/globals.py
# #     HYSPLIT_DIR=$SOURCE_DIR/gfortran_rmass16/hysplit.v5.0.1 \
# #     # easier to be /tmp because of user permissions
# #     SCRATCH_DIR=/tmp/hysplit \
# #     REGION='us-east-2' \
# #     STATUS='research'

# # ENV PATH="${PATH}:${HYSPLIT_DIR}/exec"
# # WORKDIR $SOURCE_DIR/hysplit_wrapper

